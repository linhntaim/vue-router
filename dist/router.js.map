{"version":3,"sources":["../src/router.js"],"names":["Router","options","routePathByNames","beforeDefault","beforeRouting","beforeEnabled","afterDefault","afterRouting","afterEnabled","authRoutes","notAuthRoutes","parseRoutes","beforeEach","to","from","next","session","skipping","middlewareGroups","slice","matched","forEach","route","meta","add","middleware","Middleware","push","Array","isArray","subMiddleware","before","length","BeforeMiddlewareManager","run","afterEach","after","AfterMiddlewareManager","abortSkipping","parentPath","routePath","path","replace","name","children","childRoute","parseRoute","routes","matcher","replaceRoutes","location","onComplete","onAbort","skip","VueRouter"],"mappings":"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","sourcesContent":["import {session} from './session'\r\nimport {AfterMiddlewareManager, BeforeMiddlewareManager, Middleware} from './middleware'\r\nimport VueRouter from 'vue-router'\r\n\r\nexport default class Router extends VueRouter {\r\n    constructor(options = {}) {\r\n        super(options)\r\n\r\n        this.routePathByNames = {}\r\n\r\n        this.beforeDefault = this.options.beforeDefault ? this.options.beforeDefault : []\r\n        this.beforeRouting = this.options.beforeRouting ? this.options.beforeRouting : null\r\n        this.beforeEnabled = this.options.beforeEnabled ? this.options.beforeEnabled : () => true\r\n        this.afterDefault = this.options.afterDefault ? this.options.afterDefault : []\r\n        this.afterRouting = this.options.afterRouting ? this.options.afterRouting : null\r\n        this.afterEnabled = this.options.afterEnabled ? this.options.afterEnabled : () => true\r\n        this.authRoutes = this.options.authRoutes ? this.options.authRoutes : null\r\n        this.notAuthRoutes = this.options.notAuthRoutes ? this.options.notAuthRoutes : null\r\n\r\n        delete this.options.beforeDefault\r\n        delete this.options.beforeRouting\r\n        delete this.options.beforeEnabled\r\n        delete this.options.afterDefault\r\n        delete this.options.afterRouting\r\n        delete this.options.afterEnabled\r\n        delete this.options.authRoutes\r\n        delete this.options.notAuthRoutes\r\n\r\n        this.parseRoutes()\r\n\r\n        this.beforeEach((to, from, next) => {\r\n            this.beforeRouting && this.beforeRouting(to, from)\r\n\r\n            if (this.beforeEnabled(to, from) && !session.skipping()) {\r\n                const middlewareGroups = this.beforeDefault.slice(0)\r\n                to.matched.forEach(route => {\r\n                    if ('middleware' in route.meta) {\r\n                        const add = middleware => {\r\n                            if (middleware instanceof Middleware) {\r\n                                middlewareGroups.push(middleware)\r\n                                return\r\n                            }\r\n                            if (Array.isArray(middleware)) {\r\n                                middleware.forEach(subMiddleware => add(subMiddleware))\r\n                                return\r\n                            }\r\n                            if ('before' in middleware) {\r\n                                add(middleware.before)\r\n                            }\r\n                        }\r\n                        add(route.meta.middleware)\r\n                    }\r\n                })\r\n\r\n                if (middlewareGroups.length) {\r\n                    (new BeforeMiddlewareManager(middlewareGroups, this)).run(to, from, next)\r\n                    return\r\n                }\r\n            }\r\n\r\n            next()\r\n        })\r\n\r\n        this.afterEach((to, from) => {\r\n            if (this.afterEnabled(to, from) && !session.skipping()) {\r\n                const middlewareGroups = []\r\n                to.matched.forEach(route => {\r\n                    if ('middleware' in route.meta) {\r\n                        const add = middleware => {\r\n                            if (middleware instanceof Middleware) {\r\n                                middlewareGroups.push(middleware)\r\n                                return\r\n                            }\r\n                            if (Array.isArray(middleware)) {\r\n                                middleware.forEach(subMiddleware => add(subMiddleware))\r\n                                return\r\n                            }\r\n                            if ('after' in middleware) {\r\n                                add(middleware.after)\r\n                            }\r\n                        }\r\n                        add(route.meta.middleware)\r\n                    }\r\n                })\r\n                middlewareGroups.push(...this.afterDefault.slice(0))\r\n                if (middlewareGroups.length) {\r\n                    (new AfterMiddlewareManager(middlewareGroups, this)).run(to, from)\r\n                }\r\n            }\r\n\r\n            session.skipping() && session.abortSkipping()\r\n            this.afterRouting && this.afterRouting(to, from)\r\n        })\r\n    }\r\n\r\n    parseRoute(route, parentPath = '') {\r\n        const routePath = '/' + (parentPath + '/' + route.path).replace(/\\/+/g, '/').replace(/^\\/|\\/$/g, '')\r\n        if (route.name) {\r\n            this.routePathByNames[route.name] = routePath\r\n        }\r\n        route.children && route.children.length && route.children.forEach(childRoute => {\r\n            this.parseRoute(childRoute, routePath)\r\n        })\r\n    }\r\n\r\n    parseRoutes() {\r\n        this.routePathByNames = {}\r\n        this.options.routes.forEach(route => {\r\n            this.parseRoute(route)\r\n        })\r\n    }\r\n\r\n    getPathByName(name) {\r\n        return name in this.routePathByNames ? this.routePathByNames[name] : null\r\n    }\r\n\r\n    replaceRoutes(routes) {\r\n        this.options.routes = routes\r\n        this.matcher = (new Router(this.options)).matcher\r\n\r\n        this.parseRoutes()\r\n\r\n        return this\r\n    }\r\n\r\n    switchToAuth() {\r\n        if (this.authRoutes) {\r\n            this.replaceRoutes(this.authRoutes)\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    switchToNotAuth() {\r\n        if (this.notAuthRoutes) {\r\n            this.replaceRoutes(this.notAuthRoutes)\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    softReplace(location, onComplete = null, onAbort = null) {\r\n        session.skip()\r\n        this.replace(location, onComplete, () => {\r\n            onAbort && onAbort()\r\n        })\r\n    }\r\n\r\n    catchSoftReplace(location, onComplete = null, onAbort = null) {\r\n        session.skip()\r\n        return this.replace(location, onComplete, onAbort)\r\n    }\r\n}\r\n"],"file":"router.js"}